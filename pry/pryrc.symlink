# require "awesome_print"
# AwesomePrint.pry!

# Set height to fit nicely in a vim quickfix window, as changing the quickfix
# window height itself is much more annoying.
Pry.config.default_window_size = 3

# # <----- CUSTOM COMMANDS ----->

# Some manual colored output for the terminal, because I don't want to bother including a gem
class String
  def black;          "\033[30m#{self}\033[0m" end
  def red;            "\033[31m#{self}\033[0m" end
  def green;          "\033[32m#{self}\033[0m" end
  def brown;          "\033[33m#{self}\033[0m" end
  def blue;           "\033[34m#{self}\033[0m" end
  def magenta;        "\033[35m#{self}\033[0m" end
  def cyan;           "\033[36m#{self}\033[0m" end
  def gray;           "\033[37m#{self}\033[0m" end
  def bg_black;       "\033[40m#{self}\033[0m" end
  def bg_red;         "\033[41m#{self}\033[0m" end
  def bg_green;       "\033[42m#{self}\033[0m" end
  def bg_brown;       "\033[43m#{self}\033[0m" end
  def bg_blue;        "\033[44m#{self}\033[0m" end
  def bg_magenta;     "\033[45m#{self}\033[0m" end
  def bg_cyan;        "\033[46m#{self}\033[0m" end
  def bg_gray;        "\033[47m#{self}\033[0m" end
  def bold;           "\033[1m#{self}\033[22m" end
  def reverse_color;  "\033[7m#{self}\033[27m" end
end

def with_all_tables(options={ except: [] }, &block)
  # Temporarily turn off logger, because that shit's annoying in this context
  old_logger = ActiveRecord::Base.logger
  ActiveRecord::Base.logger = nil

  table_exceptions = ["schema_migrations",
                      "pg_*",
                      "session",
                      "setting",
                      "version"].push(*options[:except])

  ActiveRecord::Base.connection.tables.each do |table|
    next if table.match("(#{table_exceptions.join('|')})")
    klass = table.singularize.camelize.constantize

    yield table, klass
  end

  ActiveRecord::Base.logger = old_logger
  return nil
end

def clean_db
  with_all_tables do |table, klass|
    puts "Clearing #{table}...".magenta
    klass.delete_all
  end
  true
end

def inspect_db(options={ summary: false })
  with_all_tables(except: "membership_organization_hierarchies") do |table, klass|
    if klass.count > 0
      puts "\r\r #{table.upcase} | Count: #{klass.count} ".green.bold
      unless options[:summary]
        klass.find_each do |instance|
          ap instance
        end
      end
    end
  end
end

# Pry::Commands.create_command "tables" do
#   description "Show available database tables via ActiveRecord"

#   def process
#     begin
#       output.puts ActiveRecord::Base.connection.tables
#     rescue NameError => e
#       puts e
#       puts "You aren't in a Rails console, I bet."
#     end
#   end
# end


# # No worky yet
# # Pry::Commands.create_command "columns" do
# #   description "Show columns on a table via ActiveRecord"

# #   def process
# #     begin
# #       ActiveRecord::Base.connection.columns(args[0]).map{|c| [c.name, c.type] }
# #     rescue NameError => e
# #       puts e
# #       puts "You aren't in a Rails console, I bet."
# #     end
# #   end
# # end


# # <----- COMMAND ALIASES ----->

# aliases = {
#   "@" => "whereami"
# }

# aliases.each do |key, value|
#   Pry.config.commands.alias_command key, value
# end
