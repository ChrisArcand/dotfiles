# Path to your oh-my-zsh configuration.
ZSH=$HOME/.dotfiles/oh-my-zsh

# Set name of the theme to load.
# Look in oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"
ZSH_THEME="af-magic"
#ZSH_THEME="agnoster"

# Example aliases
# alias zshconfig="subl ~/.dotfiles/zsh/zshrc"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git virtualenv)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...

alias g='git' \
      'g cm'='git commit' \
      psg='ps aux | grep' \
      be='bundle exec' \
      bi='bundle install' \
      t='bundle exec rake test' \
      bp='subl ~/.dotfiles/bash_profile' \
      gc='subl ~/.dotfiles/gitconfig' \
      dotfiles='ls ~/.dotfiles && subl ~/.dotfiles' \
      nrw='npm run-script watch' \
      gd='grunt dev' \
      gdf='grunt dev --force' \
      gw='grunt watch' \
      notes='subl ~/notes' \
      sup='bundle exec stage-up' \
      bed='bundle exec deploy' \
      iatt='npm install && pac install && npm rebuild && bundle' \
      sl='sl' \
      wow='git status' \
      such='git' \
      very='git' \
      reload='source ~/.zshrc' \
      'bla'='bundle list | grep "*"| awk '{ print $2 }'|while read gem_name; do spec=$(gem specification $gem_name |grep description|awk -F 'description: ' '{ print $2 }'); echo "$gem_name: $spec"; done'


# Quick 'mark' filesystem navigation, taken from @jeroenjanssens
# TODO: Add tab completion to this!
export MARKPATH=$HOME/.marks
function j {
    cd -P $MARKPATH/$1 2>/dev/null || echo "No such mark: $1"
}
function mark {
    mkdir -p $MARKPATH; ln -s $(pwd) $MARKPATH/$1
}
function unmark {
    rm -i $MARKPATH/$1
}
function marks {
    ls -l $MARKPATH | sed 's/  / /g' | cut -d' ' -f9- | sed 's/ -/\ -/g' && echo
}

# Doesn't work
# function title {
#     echo -ne "\033]0;"$*"\007"
# }

export DYLD_LIBRARY_PATH=/usr/local/mysql/lib/:$DYLD_LIBRARY_PATH
export PATH=/usr/local/bin:/usr/local/mysql/bin:$PATH
export EDITOR='vim'

# Increase limit on number of files to watch because OS X's default is way too low
ulimit -n 2048

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

### Added by the Heroku Toolbelt
export PATH="$PATH:/usr/local/heroku/bin:"



# # Base16 Default - Console color setup script
# # Chris Kempson (http://chriskempson.com)

# color00="15/15/15" # Base 00 - Black
# color01="ac/41/42" # Base 08 - Red
# color02="90/a9/59" # Base 0B - Green
# color03="f4/bf/75" # Base 0A - Yellow
# color04="6a/9f/b5" # Base 0D - Blue
# color05="aa/75/9f" # Base 0E - Magenta
# color06="75/b5/aa" # Base 0C - Cyan
# color07="d0/d0/d0" # Base 05 - White
# color08="50/50/50" # Base 03 - Bright Black
# color09=$color01   # Base 08 - Bright Red
# color10=$color02   # Base 0B - Bright Green
# color11=$color03   # Base 0A - Bright Yellow
# color12=$color04   # Base 0D - Bright Blue
# color13=$color05   # Base 0E - Bright Magenta
# color14=$color06   # Base 0C - Bright Cyan
# color15="f5/f5/f5" # Base 07 - Bright White
# color16="d2/84/45" # Base 09
# color17="8f/55/36" # Base 0F
# color18="20/20/20" # Base 01
# color19="30/30/30" # Base 02
# color20="b0/b0/b0" # Base 04
# color21="e0/e0/e0" # Base 06

# # 16 color space
# printf "\e]4;0;rgb:$color00\e\\"
# printf "\e]4;1;rgb:$color01\e\\"
# printf "\e]4;2;rgb:$color02\e\\"
# printf "\e]4;3;rgb:$color03\e\\"
# printf "\e]4;4;rgb:$color04\e\\"
# printf "\e]4;5;rgb:$color05\e\\"
# printf "\e]4;6;rgb:$color06\e\\"
# printf "\e]4;7;rgb:$color07\e\\"
# printf "\e]4;8;rgb:$color08\e\\"
# printf "\e]4;9;rgb:$color09\e\\"
# printf "\e]4;10;rgb:$color10\e\\"
# printf "\e]4;11;rgb:$color11\e\\"
# printf "\e]4;12;rgb:$color12\e\\"
# printf "\e]4;13;rgb:$color13\e\\"
# printf "\e]4;14;rgb:$color14\e\\"
# printf "\e]4;15;rgb:$color15\e\\"


# # 256 color space
# if [ "$TERM" != linux ]; then
#   printf "\e]4;16;rgb:$color16\e\\"
#   printf "\e]4;17;rgb:$color17\e\\"
#   printf "\e]4;18;rgb:$color18\e\\"
#   printf "\e]4;19;rgb:$color19\e\\"
#   printf "\e]4;20;rgb:$color20\e\\"
#   printf "\e]4;21;rgb:$color21\e\\"
# fi

# # clean up
# unset color00
# unset color01
# unset color02
# unset color03
# unset color04
# unset color05
# unset color06
# unset color07
# unset color08
# unset color09
# unset color10
# unset color11
# unset color12
# unset color13
# unset color14
# unset color15
# unset color16
# unset color17
# unset color18
# unset color19
# unset color20
# unset color21

